services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.108.0
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
  prometheus:
    image: prom/prometheus:v2.54.1
    depends_on:
      - otel-collector
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
  broker:
    image: apache/kafka:3.8.0
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
  krp:
    container_name: krp
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    depends_on:
      - broker
      - otel-collector
    ports:
      - 8080:8080
    command:
      - /bin/bash
      - -c
      - |
        /opt/kafka/bin/kafka-topics.sh --bootstrap-server broker:9092 --create --topic topic1
        /opt/kafka/bin/kafka-topics.sh --bootstrap-server broker:9092 --create --topic topic2
        /opt/app/krp /opt/app/config.yaml
  consumer:
    container_name: consumer
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    depends_on:
      - krp
    command:
      - /bin/bash
      - -c
      - |
        /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server broker:9092 --topic topic1
